% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark_suite.R
\name{benchmark_submit}
\alias{benchmark_submit}
\title{A benchmark suite with which to run all the methods on the different tasks}
\usage{
benchmark_submit(task_ids, local_tasks_folder, remote_tasks_folder, methods,
  parameters, timeout_per_execution, max_memory_per_execution, metrics,
  num_repeats, local_output_folder, remote_output_folder,
  execute_before = NULL, verbose = FALSE)
}
\arguments{
\item{task_ids}{The ids of the tasks to be used in the evaluation.}

\item{local_tasks_folder}{A local folder containing all of the tasks to be evaluated on.}

\item{remote_tasks_folder}{A remote folder containing all of the tasks to be evaluated on.}

\item{methods}{A tibble of TI methods to use, see \code{\link[dynmethods]{get_descriptions}}.}

\item{parameters}{A named list containing data frames of the parameters to evaluate.
The names of the list must be equal to the \code{short_name} column of \code{methods}.
The data frames must correspond to the parameter set \code{par_set} of each method,
e.g. as generated by \code{\link[ParamHelpers]{generateDesignOfDefaults}},
but must also contain the column \code{paramset_id}.}

\item{timeout_per_execution}{The maximum number of seconds each execution is allowed to run, otherwise it will fail.}

\item{max_memory_per_execution}{The maximum amount of memory each execution is allowed to use, otherwise it will fail.}

\item{metrics}{Which metrics to evaluate; see \code{\link{calculate_metrics}} for a list of which metrics are available.}

\item{num_repeats}{The number of times to repeat the evaluation.}

\item{local_output_folder}{A folder in which to output intermediate and final results.}

\item{remote_output_folder}{A folder in which to store intermediate results in a remote directory when using the PRISM package.}

\item{execute_before}{Shell commands to execute before running R.}

\item{verbose}{Whether or not to print extra information.}
}
\description{
A benchmark suite with which to run all the methods on the different tasks
}
