% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper_future.R
\name{wait_or_kill}
\alias{wait_or_kill}
\title{Wait for a handle to finish or kill it}
\usage{
wait_or_kill(expr, wait_time, cancel_output_fun, check_interval = 1,
  verbose = FALSE, ...)
}
\arguments{
\item{expr}{An R \code{\link[base]{expression}} to be evaluated.}

\item{wait_time}{How long to wait before killing it.}

\item{cancel_output_fun}{A function \code{function(time_elapsed){...}} to call when the total time
has exceeded the \code{wait_time}.}

\item{check_interval}{The time waited between checking whether the future has already finished.}

\item{verbose}{Whether or not to print waiting times.}

\item{...}{extra arguments to be passed to the \code{\link[future]{future}} call.}
}
\description{
This method assumes that the handle in \code{future_handle} has only just
been started, and that it uses a multisession plan.
}
\details{
Note: You might have to make a dry run of this function before really
using it. See the examples.
}
\examples{
dry_run <- dyneval:::wait_or_kill({1}, wait_time = 5, function(x) x, 1)
dyneval:::wait_or_kill(
  expr = {
    Sys.sleep(100) # really long function
    data.frame(result = "finished", time = sleeper_time)
  },
  wait_time = 10,
  cancel_output_fun = function(t) data.frame(result = "killed", time = t),
  check_interval = 1,
  verbose = TRUE
)
}
